
#setting for .usersettings 

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
##########################
### evaluate the host load
function host_load
{
  # THRESHOLD_LOAD is the value of the one minute load
  # (multiplied by one hundred) at which you want
  # the prompt to change from COLOUR_LOW to COLOUR_HIGH
  #  Black       0;30     Dark Gray     1;30
  #  Blue        0;34     Light Blue    1;34
  #  Green       0;32     Light Green   1;32
  #  Cyan        0;36     Light Cyan    1;36
  #  Red         0;31     Light Red     1;31
  #  Purple      0;35     Light Purple  1;35
  #  Brown       0;33     Yellow        1;33
  #  Light Gray  0;37     White         1;37
  local THRESHOLD_LOAD=50
  local COLOUR_LOW="\033[1;34m"  # bold blue
  local COLOUR_HIGH="\033[1;31m" # light red
  RESET_COLOR="\033[0m"

  local ONE=$(uptime | sed -e "s/.*load average: \(.*\...\), \(.*\...\),\(.*\...\)/\1/" -e "s/ //g")
  # Apparently, "scale" in bc doesn't apply to
  # multiplication, but does apply to division.
#  local ONEHUNDRED=$(echo -e "scale=0 \n $ONE/0.01 \nquit \n" | bc)
#  if [ ${ONEHUNDRED} -gt ${THRESHOLD_LOAD} ]
#    then
#      HOST_COLOUR=$COLOUR_HIGH # light red
#    else
#      HOST_COLOUR=$COLOUR_LOW  # light blue
#  fi
}

HOST_COLOUR="\033[32;40m"
### get the name of the current tty
function get_tty
{
    if [ notset.$DISPLAY == notset. ]
    then
      ttyname="$(tty |  sed -e 's/.*\([0-9]\)/\1/')"
    fi
}

### how many characters of the $PWD should be kept
function cut_pwd
{
 if [ $HOME ==  ${PWD:0:${#HOME}} ]
 then
   newPWD="~${PWD:${#HOME}}"
 else
   newPWD=$PWD
 fi

  local pwdmaxlen=10
  if [ ${#newPWD} -gt $pwdmaxlen ]
  then
    local pwdoffset=$(( ${#newPWD} - $pwdmaxlen  ))
    newPWD=".+${newPWD:$pwdoffset:$pwdmaxlen}"
  fi

}

### set xterm title
function set_title
{
  if [ $TERM == "xterm" ]
  then
    #echo -ne "\033]0;${USER}@${HOSTNAME}:${newPWD}\007"
    #Comment above and uncomment below if you want the path to be displayed as xterm tile
    echo -ne "\033]0;$PWD\007"
  fi
}

#redefine virtualenv prompt
function virtualenv_info(){
    # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Strip out the path and just leave the env name
        venv="${VIRTUAL_ENV##*/}"
    else
        # In case you don't have one activated
        venv=''
    fi
    [[ -n "$venv" ]] && echo "\n(venv:$venv)"
}

# disable the default virtualenv prompt change
export VIRTUAL_ENV_DISABLE_PROMPT=1

### define the content of the prompt command
function prompt_command
{
  host_load
  get_tty
  cut_pwd
  set_title  
  VENV="$(virtualenv_info)"
  MYPS='$(echo -n "${PWD/#$HOME/~}" | awk -F "/" '"'"'{
 print $0}'"'"')'
 #if (length($0) > 100) { if (NF>4) print $1 "/" $2 "/.../" $(NF-1) "/" $NF;
#else if (NF>3) print $1 "/" $2 "/.../" $NF;
#else print $1 "/.../" $NF; }
#else print $0;}'"'"')'
  PS1="\n\[\e[1;33m\]-->\[\e[1;96m\]${MYPS}/\[\e[1;35m\]${VENV}\n\[\033[38;5;229m\]\u\[$(tput sgr0)\]\[\033[38;5;203m\]@\[$(tput sgr0)\]\[\033[38;5;75m\]\h\[$(tput sgr0)\]\[\033[38;5;15m\]: \[$(tput sgr0)\]"
  #PS1="\[\e[1;33m\]-->\[\e[0;32m\]${PWD}/\n\[\e[1;34m\]\u@\[\e[1;31m\]\H> \[\e[0m\]"

}

#### run once at startup
#  host_load
  get_tty
  cut_pwd
  set_title

### file and string related functions

### find a file $1
function ff() { find . -name '*'$1'*' ; }

### find a file $1 and run $2 on it
function fe() { find . -name '*'$1'*' -exec $2 {} \; ; }

### find a file and run $2 on it
function fstr()
{
    if [ "$#" -gt 2 ]; then
        echo "Usage: fstr \"pattern\" [files] "
        return;
    fi
    # tput works on linux but does not work e.g. on Sun OS
    if [ $OSTYPE === linux-gnu]; then
        SMSO=$(tput smso)
        RMSO=$(tput rmso)
    fi
     "${2:-*}" -print | xargs grep -sin "$1" | \
sed "s/$1/$SMSO$1$RMSO/gI"
}


### setting the prompt
   PROMPT_COMMAND=prompt_command
   PS2="${ttyname}\[${HOST_COLOUR}\]\h\[${RESET_COLOR}\]:\${newPWD}\\$ "
#  PS1="\[\e[1;31m\]\u@\H > \[\e[0m\]"#
   PS1="\[\e[0;31m\]DIRECTORY=\[\e[0;32m\]${PWD}\n\[\e[1;34m\]\u@\[\e[1;31m\]\H> \[\e[0m\]"

### setting options
  # shopt -s hostcomplete
  # shopt -s checkwinsize
  # shopt -s cmdhist            # Save milti-line commands on one line
                                # - enabled by default.
  set -b                        # Report the status of terminated
                                # background jobs  immediately.
  shopt -s cdspell              # Let shell correct minor typos.
  shopt -s extglob              # Extended pattern matching facilities.
  shopt -s lithist              # If cmdhist is enabled, save milti-line
                                # commands with newlines.
  shopt -s histappend           # Append to $HISTFILE, dont overwrite

### programmable completion
  if [ "${BASH_VERSION%.*}" \> "2.04" ]; then
    complete -A hostname   rsh rcp telnet rlogin ping ftp
    complete -A export     printenv
    complete -A variable   export local readonly unset
    complete -A enabled    builtin
    complete -A alias      alias unalias
    complete -A function   function

    complete -A user       su mail
    complete -A helptopic  help          # currently same as builtins
    complete -A shopt      shopt
    complete -A stopped -P '%' bg
    complete -A job -P '%'     fg jobs disown
    complete -A directory  mkdir rmdir
    complete -A directory   -o default cd # if no directory, show defaults

    complete -f -d -X '*.gz'  gzip
    complete -f -d -X '*.bz2' bzip2
    complete -f -o default -X '!*.gz'  gunzip
    complete -f -o default -X '!*.bz2' bunzip2
    complete -f -o default -X '!*.pl'  perl perl5
    complete -f -o default -X '!*.ps'  gs ghostview ps2pdf ps2ascii
    complete -f -o default -X '!*.dvi' dvips dvipdf xdvi dviselect dvitype
    complete -f -o default -X '!*.pdf' acroread pdf2ps
    complete -f -o default -X '!*.+(pdf|ps)' gv
    complete -f -o default -X '!*.texi*' makeinfo texi2dvi texi2html texi2pdf
    complete -f -o default -X '!*.tex' tex latex slitex pdflatex
    complete -f -o default -X '!*.lyx' lyx
    complete -f -o default -X '!*.+(jpg|gif|xpm|png|bmp)' xv gimp
    complete -f -o default -X '!*.mp3' mpg123
    complete -f -o default -X '!*.ogg' ogg123

    # uberfun debian completion
#    source /etc/bash_completion
  fi

# cursor for vesa fb echo -e '\033[?17:0:24c'

# Local Variables:

##### General Settings #####################################################
export EDITOR=sub
export PATH=$PATH:$HOME/bin:/usr/local/bin:

##### SOFTWARE SETTINGS ####################################################

##### INTEL COMPILER SETTINGS ##############################################

##### MPI SETTINGS #########################################################

##### KDE GNOME SETTINGS ###################################################

##### INTEL VTUNE SETTINGS #################################################
